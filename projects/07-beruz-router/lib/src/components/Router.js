import{jsx as _jsx}from"react/jsx-runtime";import React,{useState,useEffect}from"react";import{Children}from"react";import{match}from"path-to-regexp";import{EVENTS}from"../consts/consts.js";import{getCurrentPath}from"../utils.js";const Router=({children,routes=[],defaultComponent:DefaultComponent=()=>_jsx("h1",{children:"404"})})=>{const[currentPath,setCurrentPath]=useState(()=>getCurrentPath());useEffect(()=>{const onLocationChange=()=>{setCurrentPath(getCurrentPath())};window.addEventListener(EVENTS.PUSHSTATE,onLocationChange);window.addEventListener(EVENTS.POPSTATE,onLocationChange);return()=>{window.removeEventListener(EVENTS.PUSHSTATE,onLocationChange);window.removeEventListener("popstate",onLocationChange)}},[]);let routerParams={};const routesFromChildren=Children.map(children,({props,type})=>{const{name}=type;const isRoute=name==="Route";return isRoute?props:null});console.log(routesFromChildren);const routesToUse=routes.concat(routesFromChildren).filter(Boolean);const Page=routesToUse.find(({path})=>{if(path===currentPath)return true;const matcherUrl=match(path,{decode:decodeURIComponent});const matched=matcherUrl(currentPath);if(!matched)return false;routerParams=matched.params;return true})?.Component;return Page?_jsx(Page,{routerParams:routerParams}):_jsx(DefaultComponent,{routerParams:routerParams})};export default Router;